<Window x:Class="SchedulingAssistantCSharp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SchedulingAssistantCSharp"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="3*"/>
            <ColumnDefinition Width="7*"/>
        </Grid.ColumnDefinitions>
        <!-- Your existing UI components go here -->
        <Calendar x:Name="calendarControl" Margin="10" SelectionMode="MultipleRange"
                  SelectedDatesChanged="CalendarControl_SelectedDateChanged"/>
        <StackPanel Grid.Column="1" Margin="10">
            <!-- Header -->
            <TextBlock Text="Scheduled Tasks" FontSize="16" FontWeight="Bold" Margin="0,0,0,10"/>
            <StackPanel Orientation="Vertical" HorizontalAlignment="Left" Margin="0,0,0,10">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0, 10, 0, 10">

                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,10,0,10">
                    <Button x:Name="btnCreateGeneralTasks" Height="40" Width="200" Content="Create general tasks" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="5,0,30,0" Click="btnCreateGeneralTasks_Click"/>
                    <Button x:Name="btnCreateTaskGroup" Height="40" Width="200" Content="Edit Task Groups" Click="btnCreateTaskGroup_Click" Margin="5,0,0,0"/>

                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,10">
                    <ComboBox x:Name="comboBoxTaskGroups" Width="175" DisplayMemberPath="Name" />
                    <Button x:Name="btnAddTaskGroup" Content="Add Task Group" Click="btnAddTaskGroup_Click" Margin="5,0,0,0"/>
                    <ComboBox x:Name="comboBoxTaskDefinitions" Width="200" DisplayMemberPath="Name" Margin="5,0,0,0"/>
                    <Button x:Name="btnAddTask" Content="Add Task" Click="btnAddTask_Click" Margin="5,0,0,0"/>
                </StackPanel>
            </StackPanel>
            <!-- Add Task Controls: ComboBox to select TaskDefinition and Add button -->
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,10">

            </StackPanel>
            <!-- List of Scheduled Tasks with a Delete button for each -->
            <ListBox x:Name="listBoxScheduledTasks">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <!-- default when a person _is_ assigned -->
                        <Setter Property="Background" Value="LightGreen"/>
                        <Style.Triggers>
                            <!-- if AssignedPerson == null, switch to red -->
                            <DataTrigger Binding="{Binding AssignedPerson}" Value="{x:Null}">
                                <Setter Property="Background" Value="LightCoral"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <!-- Show the task name and formatted date -->
                            <TextBlock Text="{Binding Task.Name}" Width="100"/>
                            <TextBlock Text="{Binding AssignedPerson.Name, TargetNullValue='[Unassigned]'}"
                                       Width="100" Margin="5,0,0,0"/>
                            <Button Content="Assign" Margin="5,0,0,0" Tag="{Binding}"
                                    Click="AssignTaskButton_Click">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <!-- default: enabled -->
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Style.Triggers>
                                            <!-- when Locked is true, disable -->
                                            <DataTrigger Binding="{Binding Locked}" Value="True">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <CheckBox Content="Lock?"
                                      Margin="5,0,0,0"
                                      IsChecked="{Binding Locked, Mode=TwoWay}">
                                <CheckBox.Style>
                                    <Style TargetType="CheckBox">
                                        <!-- by default it’s enabled -->
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Style.Triggers>
                                            <!-- if there’s no AssignedPerson, disable the box -->
                                            <DataTrigger Binding="{Binding AssignedPerson}" Value="{x:Null}">
                                                <Setter Property="IsEnabled" Value="False"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </CheckBox.Style>
                            </CheckBox>
                            <!-- Delete button that passes the ScheduledTask object via its Tag property -->
                            <CheckBox x:Name="chkEnableDelete"
                                      VerticalAlignment="Center"
                                      Margin="25,0,5,0"/>
                            <Button Content="Delete?"
                                    Margin="10,0,0,0"
                                    Tag="{Binding}"
                                    Click="DeleteTaskButton_Click"
                                    IsEnabled="{Binding IsChecked, ElementName=chkEnableDelete}"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <Button Content="Optimize Schedule" Click="OptimizeSchedule_Click" Margin="0,10,0,0" Height="30"/>
            <ProgressBar x:Name="OptimizationProgress" Minimum="0" Maximum="100" />
            <TextBlock x:Name="CostDisplay" Text="Current Best Cost: " />
            <Button x:Name="btnSaveSchedule" Content="Save Schedule"
                    HorizontalAlignment="Center" VerticalAlignment="Top" Width="150" Height="50" Margin="0,5,0,0"
                    Click="btnSaveSchedule_Click"/>
        </StackPanel>
        <!-- Create general tasks button positioned at the bottom left -->
        <Button Content="UnlockTasks"  Margin="0,213,0,0" Click="UnlockTasks_Click"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Width="148" Height="34" />
        <Button Content="Delete Unlocked Tasks"
                Margin="0,252,0,0"
                Click="DeleteUnlockedTasks_Click"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Width="148" Height="34" />
        <Button Content="Unassign Unlocked Tasks"
            Width="190"
            Margin="0,299,0,0"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Click="Unassign_Click" Height="37"/>
        <Button Content="Work Stats"
                Width="120"
                Margin="0,387,0,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                Click="OpenWorkStats_Click" Height="37"/>

        <Button x:Name="btnCreatePersonnel" Content="Create Personnel"
                HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,48,0,0"
                Click="btnCreatePersonnel_Click" Grid.Column="1"/>
    </Grid>
</Window>
